#include "fsm.h"


void fsm() {
  switch(state) {
    case MAIN_MENU:
      fsm_mainMenu();
      break;
    case PLAY:
      fsm_game();
      break;
    case SETTINGS:
      fsm_settings();
      break;
    case HIGHSCORES:
      fsm_highscores();
      break;
  }
}

void fsm_mainMenu() {
  menu_displayPage(main_menu);
  USERINPUT input = getUserInput();
  switch(input) {
    case BTN_WHITE_UP:
      page_scroll(main_menu, BTN_WHITE_UP);
      break;
    case BTN_YELLOW_DOWN:
      page_scroll(main_menu, BTN_YELLOW_DOWN);
      break;
    case BTN_GREEN_ENTER:
      state = main_menu.items[main_menu.lcd_line0_index].enter_state;
      break;
  }
}

void fsm_game() {
  game_init();
  bool game_over_flag = false;
  while (!game_over_flag) {
    game_appendNewTask();
    game_displayCorrectSequence();
    while (!game_isEndOfSequence()) {
      USERINPUT new_input = getUserInput();
      user_sequence_len++;
      if (!game_isCorrectInput(new_input)) {
        game_over_flag = true;
        break;
      }
    }
  }
  game_over();
}

void fsm_settings() {
  page_display(settings_menu);
  USERINPUT input = getUserInput();
  switch(input) {
    case BTN_WHITE_UP:
      page_scroll(settings_menu, BTN_WHITE_UP);
      break;
    case BTN_YELLOW_DOWN:
      page_scroll(settings_menu, BTN_YELLOW_DOWN);
      break;
    case BTN_RED_BACK:
      state = MAIN_MENU;
      break;
    case BTN_GREEN_ENTER:
      // call the action function
      break;
  }
}

void fsm_highscores() {
  page_display(highscores_menu);
  highscoresDisplay();
  USERINPUT input = getUserInput();
  switch(input) {
    case BTN_WHITE_UP:
      page_scroll(highscores_menu, BTN_WHITE_UP);
      break;
    case BTN_YELLOW_DOWN:
      page_scroll(highscores_menu, BTN_YELLOW_DOWN);
      break;
    case BTN_RED_BACK:
      state = MAIN_MENU;
      break;
  }
}

